# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import groundstation_pb2 as groundstation__pb2


class GroundStationServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.streamPackets = channel.unary_stream(
        '/proto.GroundStationService/streamPackets',
        request_serializer=groundstation__pb2.StreamRequest.SerializeToString,
        response_deserializer=groundstation__pb2.DataBundle.FromString,
        )
    self.sendCommand = channel.unary_unary(
        '/proto.GroundStationService/sendCommand',
        request_serializer=groundstation__pb2.Command.SerializeToString,
        response_deserializer=groundstation__pb2.Ack.FromString,
        )
    self.sendSimCommand = channel.unary_unary(
        '/proto.GroundStationService/sendSimCommand',
        request_serializer=groundstation__pb2.SimCommand.SerializeToString,
        response_deserializer=groundstation__pb2.Ack.FromString,
        )
    self.ping = channel.unary_unary(
        '/proto.GroundStationService/ping',
        request_serializer=groundstation__pb2.Ping.SerializeToString,
        response_deserializer=groundstation__pb2.Pong.FromString,
        )
    self.controlServer = channel.unary_unary(
        '/proto.GroundStationService/controlServer',
        request_serializer=groundstation__pb2.ServerControl.SerializeToString,
        response_deserializer=groundstation__pb2.Ack.FromString,
        )
    self.InitSim = channel.unary_unary(
        '/proto.GroundStationService/InitSim',
        request_serializer=groundstation__pb2.SimInit.SerializeToString,
        response_deserializer=groundstation__pb2.Ack.FromString,
        )
    self.RequestSimConfigList = channel.unary_unary(
        '/proto.GroundStationService/RequestSimConfigList',
        request_serializer=groundstation__pb2.SimConfigListRequest.SerializeToString,
        response_deserializer=groundstation__pb2.SimConfigList.FromString,
        )


class GroundStationServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def streamPackets(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def sendCommand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def sendSimCommand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ping(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def controlServer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def InitSim(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RequestSimConfigList(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GroundStationServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'streamPackets': grpc.unary_stream_rpc_method_handler(
          servicer.streamPackets,
          request_deserializer=groundstation__pb2.StreamRequest.FromString,
          response_serializer=groundstation__pb2.DataBundle.SerializeToString,
      ),
      'sendCommand': grpc.unary_unary_rpc_method_handler(
          servicer.sendCommand,
          request_deserializer=groundstation__pb2.Command.FromString,
          response_serializer=groundstation__pb2.Ack.SerializeToString,
      ),
      'sendSimCommand': grpc.unary_unary_rpc_method_handler(
          servicer.sendSimCommand,
          request_deserializer=groundstation__pb2.SimCommand.FromString,
          response_serializer=groundstation__pb2.Ack.SerializeToString,
      ),
      'ping': grpc.unary_unary_rpc_method_handler(
          servicer.ping,
          request_deserializer=groundstation__pb2.Ping.FromString,
          response_serializer=groundstation__pb2.Pong.SerializeToString,
      ),
      'controlServer': grpc.unary_unary_rpc_method_handler(
          servicer.controlServer,
          request_deserializer=groundstation__pb2.ServerControl.FromString,
          response_serializer=groundstation__pb2.Ack.SerializeToString,
      ),
      'InitSim': grpc.unary_unary_rpc_method_handler(
          servicer.InitSim,
          request_deserializer=groundstation__pb2.SimInit.FromString,
          response_serializer=groundstation__pb2.Ack.SerializeToString,
      ),
      'RequestSimConfigList': grpc.unary_unary_rpc_method_handler(
          servicer.RequestSimConfigList,
          request_deserializer=groundstation__pb2.SimConfigListRequest.FromString,
          response_serializer=groundstation__pb2.SimConfigList.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proto.GroundStationService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
